{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport '../Slider/index.css';\n//import logements from '../../data/logement.json'\n\nfunction Slider(_ref) {\n  _s();\n  let {\n    slides\n  } = _ref;\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n}\n_s(Slider, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");\n_c = Slider;\nexport default Slider;\n\n//       /* Crée un Hook d'état */\n//   const [current, setCurrent] = useState(0); //je définie l'index du premier slide à 0\n//   const length = slides.length; //longueur du tableau de slides\n\n//   /**Function pour l'image precedente */\n//   const nextImage = () => {\n//     setCurrent(current === length - 1 ? 0 : current + 1); // on repart au premier slide quand on arrive au dernier\n//   };\n//   /**Function pour l'image suivante */\n//   const prevImage = () => {\n//     setCurrent(current === 0 ? length - 1 : current - 1); // on repart au dernier slide quand on est au premier\n//   };\n\n//   if (!Array.isArray(slides) || slides.length <= 0) {\n//     return null;\n//   }\n//   return (\n//     <section className=\"slide\">\n//       {length > 1 && (\n//         <p className=\"left-Arrow\" onClick={prevImage}>\n//           <i className=\"fa-solid fa-chevron-left\"></i>\n//         </p>\n//       )}\n//       {length > 1 && (\n//         <p className=\"right-Arrow\" onClick={nextImage}>\n//           <i className=\"fa-solid fa-chevron-right\"></i>\n//         </p>\n//       )}\n//       {slides.map((image, index) => {\n//         return (\n//           <div\n//             key={index}\n//             className={index === current ? \"slider active\" : \"slider\"}\n//           >\n//             {index === current && (\n//               <img src={image} alt=\"img-appartement\" className=\"slide__image\" />\n//             )}\n//             {index === current && length > 1 && (\n//               <span className=\"slider__number\">\n//                 {current + 1}/{length}\n//               </span>\n//             )}\n//           </div>\n//         );\n//       })}\n//     </section>\n//   );\n\n//     const slides =[];\n//     const [current, setCurrent] = useState(0);\n//     const length = slides.length\n//     // console.log(lengths)\n\n//     // const nextSlide = () => {\n//     //     setCurrent(current === length - 1 ? 0 : current + 1)\n//     // }\n//     // const prevSlide = () => {\n//     //     setCurrent(current === 0? length - 1: current +1)\n//     // }\n\n//     // if (!Array.isArray(slides) || slides.length <= 0) {\n//     //     return null;\n//     //   }\n\n// return (\n//     <div className=\"slider\">\n//     {slides.map((picture, index) => {\n//         return (\n\n//                 <img src={picture} alt=\"\"  className=\"slide-image\"/>\n\n//         )\n\n//     }\n\n// )\n\n// }\n// </div>\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["useState","Slider","_ref","_s","slides","current","setCurrent","length","_c","$RefreshReg$"],"sources":["/home/jolka/OpenClassrooms/P7_KRZYZAK_Jolanta/JolantaKRZYZAK_7_15062023/kasa/src/components/Slider/index.jsx"],"sourcesContent":["import { useState } from 'react'\nimport '../Slider/index.css'\n //import logements from '../../data/logement.json'\n\nfunction Slider ({slides}) {\n\n    const [current, setCurrent] = useState(0)\n    const length = slides.length\n\n\n        \n\n}\n \nexport default Slider\n\n\n//       /* Crée un Hook d'état */\n//   const [current, setCurrent] = useState(0); //je définie l'index du premier slide à 0\n//   const length = slides.length; //longueur du tableau de slides\n\n//   /**Function pour l'image precedente */\n//   const nextImage = () => {\n//     setCurrent(current === length - 1 ? 0 : current + 1); // on repart au premier slide quand on arrive au dernier\n//   };\n//   /**Function pour l'image suivante */\n//   const prevImage = () => {\n//     setCurrent(current === 0 ? length - 1 : current - 1); // on repart au dernier slide quand on est au premier\n//   };\n\n//   if (!Array.isArray(slides) || slides.length <= 0) {\n//     return null;\n//   }\n//   return (\n//     <section className=\"slide\">\n//       {length > 1 && (\n//         <p className=\"left-Arrow\" onClick={prevImage}>\n//           <i className=\"fa-solid fa-chevron-left\"></i>\n//         </p>\n//       )}\n//       {length > 1 && (\n//         <p className=\"right-Arrow\" onClick={nextImage}>\n//           <i className=\"fa-solid fa-chevron-right\"></i>\n//         </p>\n//       )}\n//       {slides.map((image, index) => {\n//         return (\n//           <div\n//             key={index}\n//             className={index === current ? \"slider active\" : \"slider\"}\n//           >\n//             {index === current && (\n//               <img src={image} alt=\"img-appartement\" className=\"slide__image\" />\n//             )}\n//             {index === current && length > 1 && (\n//               <span className=\"slider__number\">\n//                 {current + 1}/{length}\n//               </span>\n//             )}\n//           </div>\n//         );\n//       })}\n//     </section>\n//   );\n\n//     const slides =[];\n//     const [current, setCurrent] = useState(0);\n//     const length = slides.length\n//     // console.log(lengths)\n\n//     // const nextSlide = () => {\n//     //     setCurrent(current === length - 1 ? 0 : current + 1)\n//     // }\n//     // const prevSlide = () => {\n//     //     setCurrent(current === 0? length - 1: current +1)\n//     // }\n\n//     // if (!Array.isArray(slides) || slides.length <= 0) {\n//     //     return null;\n//     //   }\n\n// return (\n//     <div className=\"slider\">\n//     {slides.map((picture, index) => {\n//         return (\n            \n         \n//                 <img src={picture} alt=\"\"  className=\"slide-image\"/>\n\n        \n\n        \n//         )\n\n//     }\n\n\n\n\n   \n   \n// )\n\n// }\n// </div>"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,qBAAqB;AAC3B;;AAED,SAASC,MAAMA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAV;IAACC;EAAM,CAAC,GAAAF,IAAA;EAErB,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMO,MAAM,GAAGH,MAAM,CAACG,MAAM;AAKhC;AAACJ,EAAA,CARQF,MAAM;AAAAO,EAAA,GAANP,MAAM;AAUf,eAAeA,MAAM;;AAGrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAKA;;AAEA;;AAOA;;AAEA;AACA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}