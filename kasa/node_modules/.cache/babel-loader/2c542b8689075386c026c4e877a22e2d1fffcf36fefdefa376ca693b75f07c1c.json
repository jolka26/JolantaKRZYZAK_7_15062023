{"ast":null,"code":"var _jsxFileName = \"/home/jolka/OpenClassrooms/P7_KRZYZAK_Jolanta/JolantaKRZYZAK_7_15062023/kasa/src/components/Slider/index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport '../Slider/index.css';\nimport leftArrow from '../../assets/arrow_back.png';\nimport rightArrow from '../../assets/arrow_forward.png';\n//import logements from '../../data/logement.json'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slider(_ref) {\n  _s();\n  let {\n    slides\n  } = _ref;\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n  const nextImage = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1); // on repart au premier slide quand on arrive au dernier\n  };\n  /**Function pour l'image suivante */\n  const prevImage = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1); // on repart au dernier slide quand on est au premier\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"slider\",\n    children: [slides.map((image, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index === current ? \"slider-active\" : \"slider-inactive\",\n        children: [index === current && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"apparment-img\",\n          className: \"slide-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 49\n        }, this), index === current && length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"slider__number\",\n          children: [current + 1, \"/\", length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 63\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    }), length > 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"left-arrow\",\n      onClick: prevImage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: leftArrow,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }, this), length > 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"right-arrow\",\n      onClick: nextImage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rightArrow,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Slider, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");\n_c = Slider;\nexport default Slider;\n\n//       /* Crée un Hook d'état */\n//   const [current, setCurrent] = useState(0); //je définie l'index du premier slide à 0\n//   const length = slides.length; //longueur du tableau de slides\n\n//   /**Function pour l'image precedente */\n//   const nextImage = () => {\n//     setCurrent(current === length - 1 ? 0 : current + 1); // on repart au premier slide quand on arrive au dernier\n//   };\n//   /**Function pour l'image suivante */\n//   const prevImage = () => {\n//     setCurrent(current === 0 ? length - 1 : current - 1); // on repart au dernier slide quand on est au premier\n//   };\n\n//   if (!Array.isArray(slides) || slides.length <= 0) {\n//     return null;\n//   }\n//   return (\n//     <section className=\"slide\">\n//       {length > 1 && (\n//         <p className=\"left-Arrow\" onClick={prevImage}>\n//           <i className=\"fa-solid fa-chevron-left\"></i>\n//         </p>\n//       )}\n//       {length > 1 && (\n//         <p className=\"right-Arrow\" onClick={nextImage}>\n//           <i className=\"fa-solid fa-chevron-right\"></i>\n//         </p>\n//       )}\n//       {slides.map((image, index) => {\n//         return (\n//           <div\n//             key={index}\n//             className={index === current ? \"slider active\" : \"slider\"}\n//           >\n//             {index === current && (\n//               <img src={image} alt=\"img-appartement\" className=\"slide__image\" />\n//             )}\n//             {index === current && length > 1 && (\n//               <span className=\"slider__number\">\n//                 {current + 1}/{length}\n//               </span>\n//             )}\n//           </div>\n//         );\n//       })}\n//     </section>\n//   );\n\n//     const slides =[];\n//     const [current, setCurrent] = useState(0);\n//     const length = slides.length\n//     // console.log(lengths)\n\n//     // const nextSlide = () => {\n//     //     setCurrent(current === length - 1 ? 0 : current + 1)\n//     // }\n//     // const prevSlide = () => {\n//     //     setCurrent(current === 0? length - 1: current +1)\n//     // }\n\n//     // if (!Array.isArray(slides) || slides.length <= 0) {\n//     //     return null;\n//     //   }\n\n// return (\n//     <div className=\"slider\">\n//     {slides.map((picture, index) => {\n//         return (\n\n//                 <img src={picture} alt=\"\"  className=\"slide-image\"/>\n\n//         )\n\n//     }\n\n// )\n\n// }\n// </div>\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["useState","leftArrow","rightArrow","jsxDEV","_jsxDEV","Slider","_ref","_s","slides","current","setCurrent","length","nextImage","prevImage","Array","isArray","className","children","map","image","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/jolka/OpenClassrooms/P7_KRZYZAK_Jolanta/JolantaKRZYZAK_7_15062023/kasa/src/components/Slider/index.jsx"],"sourcesContent":["import { useState } from 'react'\nimport '../Slider/index.css'\nimport leftArrow from '../../assets/arrow_back.png'\nimport rightArrow from '../../assets/arrow_forward.png'\n //import logements from '../../data/logement.json'\n\nfunction Slider ({slides}) {\n\n    const [current, setCurrent] = useState(0)\n    const length = slides.length\n\n    const nextImage = () => {\n        setCurrent(current === length - 1 ? 0 : current + 1); // on repart au premier slide quand on arrive au dernier\n      };\n      /**Function pour l'image suivante */\n      const prevImage = () => {\n        setCurrent(current === 0 ? length - 1 : current - 1); // on repart au dernier slide quand on est au premier\n      };\n\n\n    if(!Array.isArray(slides) || slides.length <= 0) {\n        return null\n    }\n\n    return (\n        <section className=\"slider\">\n        \n            {slides.map((image, index ) => {\n                return(\n                    <div key= {index} className={index === current ? \"slider-active\" : \"slider-inactive\"}>\n                        {index === current && ( <img src= {image} alt=\"apparment-img\" className=\"slide-image\"/>)}\n                        {index === current && length > 1 && ( <span className=\"slider__number\">{current + 1}/{length}</span>)}\n                    </div>\n                )\n            })}\n            {length > 1 && (<p className=\"left-arrow\" onClick={prevImage}>\n            <img src={leftArrow} alt=\"\" /></p>)}\n\n             {length > 1 && (<p className=\"right-arrow\" onClick={nextImage}>\n            <img src={rightArrow} alt=\"\" /></p>)}\n        </section>\n    )\n}\n \nexport default Slider\n\n\n//       /* Crée un Hook d'état */\n//   const [current, setCurrent] = useState(0); //je définie l'index du premier slide à 0\n//   const length = slides.length; //longueur du tableau de slides\n\n//   /**Function pour l'image precedente */\n//   const nextImage = () => {\n//     setCurrent(current === length - 1 ? 0 : current + 1); // on repart au premier slide quand on arrive au dernier\n//   };\n//   /**Function pour l'image suivante */\n//   const prevImage = () => {\n//     setCurrent(current === 0 ? length - 1 : current - 1); // on repart au dernier slide quand on est au premier\n//   };\n\n//   if (!Array.isArray(slides) || slides.length <= 0) {\n//     return null;\n//   }\n//   return (\n//     <section className=\"slide\">\n//       {length > 1 && (\n//         <p className=\"left-Arrow\" onClick={prevImage}>\n//           <i className=\"fa-solid fa-chevron-left\"></i>\n//         </p>\n//       )}\n//       {length > 1 && (\n//         <p className=\"right-Arrow\" onClick={nextImage}>\n//           <i className=\"fa-solid fa-chevron-right\"></i>\n//         </p>\n//       )}\n//       {slides.map((image, index) => {\n//         return (\n//           <div\n//             key={index}\n//             className={index === current ? \"slider active\" : \"slider\"}\n//           >\n//             {index === current && (\n//               <img src={image} alt=\"img-appartement\" className=\"slide__image\" />\n//             )}\n//             {index === current && length > 1 && (\n//               <span className=\"slider__number\">\n//                 {current + 1}/{length}\n//               </span>\n//             )}\n//           </div>\n//         );\n//       })}\n//     </section>\n//   );\n\n//     const slides =[];\n//     const [current, setCurrent] = useState(0);\n//     const length = slides.length\n//     // console.log(lengths)\n\n//     // const nextSlide = () => {\n//     //     setCurrent(current === length - 1 ? 0 : current + 1)\n//     // }\n//     // const prevSlide = () => {\n//     //     setCurrent(current === 0? length - 1: current +1)\n//     // }\n\n//     // if (!Array.isArray(slides) || slides.length <= 0) {\n//     //     return null;\n//     //   }\n\n// return (\n//     <div className=\"slider\">\n//     {slides.map((picture, index) => {\n//         return (\n            \n         \n//                 <img src={picture} alt=\"\"  className=\"slide-image\"/>\n\n        \n\n        \n//         )\n\n//     }\n\n\n\n\n   \n   \n// )\n\n// }\n// </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}